{"cord_uid":"d86hnox1", "sourcedb":"PMC", "sourceid":"PMC5696523", "divid":9, "text":". The first step of our algorithm consists in filling a 4-by-N table of optimal scores, where each entry corresponds to a position in the sequence of quartets and a quartet state. We fill the table from left to right, one column at a time. To fill in column k, we assume column k − 1 contains, for each state , the score of the optimal sequence that terminates in this state, say − M k ( 1; )  . For column k, for any quartet Q, an optimal sequence terminating with Q is necessarily obtained by adding Q to a sequence whose k − 1 quartet has the state  = Q(1). Let s(Q) be the contribution to S(X′, Y′) of the two codons contained within a quartet Q (and its complementary strand). We have the recursion:", "project":"cdlai_CORD-19", "denotations":[]}